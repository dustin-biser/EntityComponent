//
// vec2.cpp
//
#include "vec2.hpp"

//---------------------------------------------------------------------------------------
vec2::vec2()
	: x(0.0f),
	  y(0.0f)
{

}

//---------------------------------------------------------------------------------------
vec2::vec2 (float x, float y)
	: x(x),
	  y(y)
{

}

//---------------------------------------------------------------------------------------
vec2::vec2 (const vec2 & other)
	: x(other.x),
	  y(other.y)
{

}

//---------------------------------------------------------------------------------------
bool vec2::operator == (const vec2 & other)
{
	return (this->x == other.x) && (this->y == other.y);
}

//---------------------------------------------------------------------------------------
vec2 operator + (const vec2 & v1, const vec2 & v2)
{
	return vec2(v1.x + v2.x, v1.y + v2.y);
}

//---------------------------------------------------------------------------------------
vec2 operator-(const vec2 & v1, const vec2 & v2)
{
	return vec2(v1.x - v2.x, v1.y - v2.y);
}

//---------------------------------------------------------------------------------------
vec2 operator * (const vec2 & v1, const vec2 & v2)
{
	return vec2 ( v1.x * v2.x, v1.y * v2.y );
}


